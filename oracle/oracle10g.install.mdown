# oracle1g 10.2.0.5 安装配置过程

[TOC]

### version
```
linux    : rhel server 6.5
yum      : 使用本地yum源，/yum
oracle   ：oracle10g 10.2.0.1 + 10.2.0.5
hostname : dbserver
pkg      ：10201_database_linux_x86_64.cpio.gz、p8202632_10205_Linux-x86-64.zip
```

----

### 账户信息
```
IP：10.168.125.71
root:*************
oracle:1qaz!QAZ


用户名 / 密码               登录身份                              说明
sys/oracle     SYSDBA 或 SYSOPER        不能以 NORMAL 登录，可作为默认的系统管理员
system/oracle     SYSDBA 或 NORMAL       不能以 SYSOPER 登录，可作为默认的系统管理员
SYSMAN/oracle 
DBSNMP/oracle 
```

----

### 服务开启、关闭、重启

- 开启oracle服务
```
# /etc/rc.d/init.d/oracle start
```

- 关闭oracle服务
```
# /etc/rc.d/init.d/oracle stop
```

- 重启oracle服务
```
# /etc/rc.d/init.d/oracle restart
```

----

### install 过程
```
[root@dbserver ~]# vi /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
TYPE=Ethernet
ONBOOT=yes
NM_CONTROLLED=yes
BOOTPROTO=static
IPADDR=10.168.125.71
NETMASK=255.255.255.0
GATEWAY=10.168.125.254
HOSTNAME=dbserver
[root@dbserver ~]# service network start

[root@dbserver ~]# iptables -F
[root@dbserver ~]# ip6tables -F
[root@dbserver ~]# setenforce 0
[root@dbserver ~]# chkconfig --del iptables
[root@dbserver ~]# sed -i '/^SELINUX/c SELINUX=disabled' /etc/selinux/config

[root@dbserver ~]# mkdir /yum
[root@dbserver ~]# mount -t iso9660 /dev/cdrom /mnt/
[root@dbserver ~]# cp -R /mnt/* /yum/
[root@dbserver ~]# umount /mnt/
[root@dbserver ~]# vi /etc/yum.repos.d/rhel6.5.repo
[rhel6u5]
name=rhel6u5
baseurl=file:///yum
enabled=1
gpgcheck=0
[root@dbserver ~]# yum clean all
[root@dbserver ~]# yum repolist

[root@dbserver ~]# yum install binutils-2.* compat-libstdc++-33* elfutils-libelf-0.* elfutils-libelf-devel-* gcc-c++* binutils-* gcc-4* compat-libcap* compat-libstdc++* glibc-2* glibc-devel-2* ksh libgcc-* libstdc++* libaio* libaio-devel* make* sysstat*

[root@dbserver ~]# yum -y install binutils compat-libcap1  compat-libstdc++-33 compat-libstdc++-33*.i686 elfutils-libelf-devel gcc gcc-c++ glibc*.i686 glibc glibc-devel glibc-devel*.i686 ksh libgcc*.i686 libgcc libstdc++ libstdc++*.i686 libstdc++-devel libstdc++-devel*.i686 libaio libaio*.i686 libaio-devel libaio-devel*.i686 make sysstat unixODBC unixODBC*.i686 unixODBC-devel unixODBC-devel*.i686 libXp

[root@dbserver ~]# yum -y install libXp.i686 libXt.i686 libXtst.i686

[root@dbserver ~]# yum groupinstall -y "X Window System"
[root@dbserver ~]# yum groupinstall -y "Desktop"
[root@dbserver ~]# yum install -y tigervnc tigervnc-server
[root@dbserver ~]# yum -y install libXext*
[root@dbserver ~]# yum install libXext.i686
[root@dbserver ~]# yum install libXext-devel.i686
[root@dbserver ~]# yum install firefox*

安装vmware tools，将该软件光盘连接至虚拟机
[root@dbserver ~]# mount -t iso9660 /dev/cdrom /mnt/
[root@dbserver ~]# mkdir -p /tmp/vm
[root@dbserver ~]# cp -R  /mnt/ /tmp/vm/
[root@dbserver ~]# umount /mnt/
[root@dbserver ~]# cd /tmp/vm/
[root@dbserver ~]# tar -xvzf VMwareTools-9.10.0-2476743.tar.gz
[root@dbserver ~]# cd vmware-tools-distrib/
[root@dbserver ~]# ./vmware-install.pl

[root@dbserver ~]# service cups stop
[root@dbserver ~]# chkconfig cups off
[root@dbserver ~]# service postfix stop
[root@dbserver ~]# chkconfig postfix off
[root@dbserver ~]# vi /etc/hosts
10.168.125.71   dbserver        localhost

[root@dbserver ~]# groupadd -g 1000 oinstall
[root@dbserver ~]# groupadd -g 1100 dba
[root@dbserver ~]# useradd -m -g oinstall -G dba -u 1200 oracle
[root@dbserver ~]# passwd oracle
[root@dbserver ~]# id oracle

[root@dbserver ~]# mkdir -p /u01/app/oracle/product/10.2.0/db_1
[root@dbserver ~]# chown -R oracle:oinstall /u01/app/
[root@dbserver ~]# chmod -R 775 /u01/app/

[root@dbserver ~]# vi /etc/sysctl.conf
# Controls the maximum shared segment size, in bytes
#kernel.shmmax = 68719476736

# Controls the maximum number of shared memory segments, in pages
#kernel.shmall = 4294967296

kernel.shmall= 2097152
kernel.shmmax= 5000000000
kernel.shmmni= 4096
kernel.sem= 250 32000 100 128
net.ipv4.ip_local_port_range= 1024 65000
net.core.rmem_default=4194304
net.core.rmem_max=4194304
net.core.wmem_default=262144
net.core.wmem_max=262144

vm.hugetlb_shm_group = 1100
[root@dbserver ~]# sysctl -p

[root@dbserver ~]# vi /etc/security/limits.conf
oracle              soft    nproc   2047
oracle              hard    nproc   16384
oracle              soft    nofile  1024
oracle              hard    nofile  65536

注意：修改此文件是即时生效的，但可能要重登录后再看
[root@dbserver ~]# ulimit -Sn
[root@dbserver ~]# ulimit -Hn

[root@dbserver ~]# vi /etc/pam.d/login
#session required /lib/security/pam_limits.so
session required pam_limits.so

[root@dbserver ~]# vi /etc/profile
if [ $USER = "oracle" ]; then
    if [ $SHELL = "/bin/ksh" ]; then
        ulimit -p 16384
        ulimit -n 65536
    else
        ulimit -u 16384 -n 65536
    fi
fi

[root@dbserver ~]# vi ~oracle/.bash_profile
#Oracle Settings
export TMP=/tmp;
export TMPDIR=$TMP;
export ORACLE_BASE=/u01/app/oracle;
export ORACLE_HOME=$ORACLE_BASE/product/10.2.0/db_1;
export ORACLE_SID=orcl;
export ORACLE_TERM=xterm;
export PATH=/usr/sbin:$PATH;
export PATH=$ORACLE_HOME/bin:$PATH;
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib;
export CLASSPATH=$ORACLE_HOME/JRE:$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib;
[root@dbserver ~]# source ~oracle/.bash_profile

[root@dbserver ~]# vi /etc/inittab
id:5:initdefault:
[root@dbserver ~]# reboot

[root@dbserver ~]# startx
[root@dbserver ~]# vncserver
设置密码为1qaz!QAZ
[root@dbserver ~]# service vncserver start
[root@dbserver ~]# chkconfig --list | grep vnc
[root@dbserver ~]# chkconfig vncserver on
[root@dbserver ~]# export DISPLAY=dbserver:1
[root@dbserver ~]# xhost +


[root@dbserver ~]# cp /tmp/10201_database_linux_x86_64.cpio.gz /u01/app/oracle/
[root@dbserver ~]# chown -R oracle.oinstall  /u01/app/oracle/

[root@dbserver ~]# cd /u01/app/
[root@dbserver ~]# chown -R oracle.oinstall  /u01/app/oracle/

[root@dbserver ~]# vi /etc/redhat-release
Red Hat Enterprise Linux Server release 4 (Tikanga)


[root@dbserver ~]# su - oracle
[oracle@dbserver ~]$ unset LANG LANGUAGE

[oracle@dbserver ~]$ cd /u01/app/oracle/
[oracle@dbserver ~]$ gzip -d 10201_database_linux_x86_64.cpio.gz
[oracle@dbserver ~]$ cpio -idmv < 10201_database_linux_x86_64.cpio

以oracle用户登陆图形化桌面，并打开一个终端
[oracle@dbserver ~]$ cd /u01/app/oracle/database/
[oracle@dbserver ~]$ ./runInstaller
[oracle@dbserver ~]$ 
[oracle@dbserver ~]$ 
```

![001](pic10g/01.png)
![002](pic10g/02.png)
![003](pic10g/03.png)
![004](pic10g/04.png)
![005](pic10g/05.png)
![006](pic10g/06.png)
![007](pic10g/07.png)
![008](pic10g/08.png)
![009](pic10g/09.png)
![010](pic10g/10.png)

![011](pic10g/11.png)
![012](pic10g/12.png)
![013](pic10g/13.png)
这是个BUG，按继续。

![014](pic10g/14.png)


![015](pic10g/15.png)
![016](pic10g/16.png)
![017](pic10g/17.png)
![018](pic10g/18.png)

配置完之后，接着以root账户执行两个脚本,配置完即可。
```
[root@dbserver ~]# cd /u01/app/oraInventory/
[root@dbserver ~]# .orainstRoot.sh 
[root@dbserver ~]# cd /u01/app/oracle/product/10.2.0/db_1/
[root@dbserver ~]# .root.sh
```


![019](pic10g/19.png)
![020](pic10g/20.png)

测试是否安装成功。至此oracle10.2.0.1安装完成，接着升级至10.2.0.5
```
[root@dbserver ~]# mv /tmp/p8202632_10205_Linux-x86-64.zip /u01/app/oracle/[root@dbserver ~]# oinstall_105/
[root@dbserver ~]# cd /u01/app/oracle/oinstall_105/
[root@dbserver ~]# chown -R oracle.oinstall /u01/app/oracle/
[root@dbserver ~]# chmod 775 -R  /u01/app/oracle/
[root@dbserver ~]# export DISPLAY=dbserver:1
[root@dbserver ~]# vncserver
[root@dbserver ~]# xhost +
[root@dbserver ~]# su - oracle
[oracle@dbserver ~]$ cd /u01/app/oracle/oinstall_105/
[oracle@dbserver ~]$ unzip p8202632_10205_Linux-x86-64.zip
```

以oracle用户登陆图形化桌面，并打开一个终端
```
[oracle@dbserver ~]$ cd /u01/app/oracle/oinstall_105/Disk1/
[oracle@dbserver ~]$ ./runInstaller
```

![001](pic10g/up01.png)
![002](pic10g/up02.png)
![003](pic10g/up03.png)
![004](pic10g/up04.png)
![005](pic10g/up05.png)
![006](pic10g/up06.png)
![007](pic10g/up07.png)

Ok,到此ORACLE补丁已经安装完成，先不要启动数据库，还需要升级数据库才行
```
1.以oracle用户登陆
[oracle@dbserver ~]$  sqlplus /nolog
SQL>connect /as sysdba

2、以升级模式启动数据库
SQL>startup upgrade
数据库升级完毕

3.接着升级数据库字典
SQL>SPOOL path.log（路径默认在oracle主目录下 /opt/oracle/，这个日志会有点大30多M，可以查看.）
SQL>@$ORACLE_HOME/rdbms/admin/catupgrd.sql ...安装过程图省略(这里要等待比较长一段时间) 耐心等待，直至完毕，出现sql> SQL>SPOOL OFF

4、执行完重建数据字典，重启数据库 
SQL>SHUTDOWN IMMEDIATE SQL>STARTUP

5、编译无效对象 
由于catupgrd.sql重建过程中可能造成一些对象失效，我们需要运行utlrp.sql重新编译PL/SQL packages (知道utlrp.sql功能了吧，黑黑，有事没事都可以执行一下)。 SQL> @?/rdbms/admin/utlrp.sql 耐心等待，直至完毕，出现sql> 

6、然后运行下面的命令来检查升级之后，所有组件的状态： 
SQL>select comp_name, version, status from sys.dba_registry; 显示值为VALID，则成功完成升级
SQL>select tablespace_name,status from dba_tablespaces; --表空间都在 
SQL>select username from dba_users; --用户都在 
SQL>select object_name from dba_objects where owner='SCOTT'; --用户对象都在
```
――到此所有补丁升级完成，重启数据库，重启监听。

---

### 设置开机自动开启服务
````
[使用root用户]
# vi oracle
#!/bin/bash
#
#################FUNCTION#############
#
# AutoStart Oracle and listener
# AutoStop Oracle and listener
#
#####################################
#
# Created by ZFSFOT 2005-09-15
# 
case "$1" in
start)
echo "Starting Oracle Databases ... " 
echo "-------------------------------------------------" >> /var/log/oracle
date +" %T %a %D : Starting Oracle Databasee as part of system up." >> /var/log/oracle
echo "-------------------------------------------------" >> /var/log/oracle
su - oracle -c "dbstart" >> /var/log/oracle
echo "Done."
echo "Starting Oracle Listeners ... " 
echo "-------------------------------------------------" >> /var/log/oracle
date +" %T %a %D : Starting Oracle Listeners as part of system up." >> /var/log/oracle
echo "-------------------------------------------rc------" >> /var/log/oracle
su - oracle -c "lsnrctl start" >> /var/log/oracle
echo "Done."
echo ""
echo "-------------------------------------------------" >> /var/log/oracle
date +" %T %a %D : Finished." >> /var/log/oracle
echo "-------------------------------------------------" >> /var/log/oracle
touch /var/lock/subsys/oracle
;;
stop)
echo "Stoping Oracle Listeners ... " 
echo "-------------------------------------------------" >> /var/log/oracle
date +" %T %a %D : Stoping Oracle Listener as part of system down." >> /var/log/oracle
echo "-------------------------------------------------" >> /var/log/oracle
su - oracle -c "lsnrctl stop" >> /var/log/oracle
echo "Done."
rm -f /var/lock/subsys/oracle
echo "Stoping Oracle Databases ... "
echo "-------------------------------------------------" >> /var/log/oracle
date +" %T %a %D : Stoping Oracle Databases as part of system down." >> /var/log/oracle
echo "-------------------------------------------------" >> /var/log/oracle
su - oracle -c "dbshut" >>/var/log/oracle
echo "Done."
echo ""
echo "-------------------------------------------------" >> /var/log/oracle
date +" %T %a %D : Finished." >> /var/log/oracle
echo "-------------------------------------------------" >> /var/log/oracle
;;
restart)
$0 stop
$0 start
;;
*)
echo "Usage: oracle {start|stop|restart}" 
exit 1
esac
````
将脚本命名为oracle，保存在/etc/rc.d/init.d下
改变文件属性：chmod 755 oracle
```
# chmod 755 oracle
# mv oracle /etc/rc.d/init.d/
```
注意：在windows下编辑此文件时有DOS格式字符导致在linux下不能够正常运行，建议用gedit 或用 vi编辑

3、建立服务连接：
系统启动时启动数据库，我们需要以下连结∶
```
$ ln -s /etc/rc.d/init.d/oracle /etc/rc.d/rc2.d/S99oracle
$ ln -s /etc/rc.d/init.d/oracle /etc/rc.d/rc3.d/S99oracle
$ ln -s /etc/rc.d/init.d/oracle /etc/rc.d/rc5.d/S99oracle
```

要在重新启动时停止数据库，我们需要以下连结∶ 
```
$ ln -s /etc/rc.d/init.d/oracle /etc/rc.d/rc0.d/K01oracle
$ ln -s /etc/rc.d/init.d/oracle /etc/rc.d/rc6.d/K01oracle
```

